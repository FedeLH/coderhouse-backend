paths:
  /api/products:
    get:
      tags:
        - Products
      description: This endpoint delivers all paginated products
      summary: All products
      parameters:
        - in: query
          name: limit
          description: Number of products per page, if not specified, its value will be 10
          required: false
          schema:
            type: number
        - in: query
          name: page
          description: Number of page to be consulted, if not specified, its value will be 1
          required: false
          schema:
            type: number
        - in: query
          name: sort
          description: Establishes the ordering of the products by price, it can be "ASC"/"DES" if it is not specified, no order will be established
          required: false
          schema:
            type: string
        - in: query
          name: query
          description: Allows to inject any query accepted by the data model
          required: false
          schema:
            type: object
            $ref: '#/components/schemas/Query'        
      responses:
        200:
          description: Could get the products successfully
          content: 
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PaginateProducts'
        404:
          description: Could not get the products, probably because of a bug with the data persistence model
          content: 
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Products    
      description: This endpoint allows you to add a new product
      summary: Add new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/requestBodies/addProduct'
      responses:
        201:
          description: The product was added successfully
          content: 
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessAddProduct'
        404:
          description: The product could not be added
          content: 
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Error'    
  /api/products/{pid}:
    get:
      tags:
        - Products
      description: This endpoint allows you to obtain a product through its ID
      summary: Product by ID
      parameters:
        - in: path
          name: pid
          description: Is the autogenerated ID for the product
          required: true
          schema:
            type: string
      responses:
        200:
          description: The product was obtained successfully
          content: 
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessGetProduct'
        404:
          description: The product could not be obtained
          content: 
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Error'      
    put:
      tags:
        - Products    
      description: This endpoint allows you to modify a product through its ID
      summary: Modify product by ID
      parameters:
        - in: path
          name: pid
          description: Is the autogenerated ID for the product
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/requestBodies/updateProduct'      
      responses:
        201:
          description: The product was successfully modified
          content: 
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessUpdateProduct'
        404:
          description: The product could not be modified
          content: 
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Error'      
    delete:
      tags:
        - Products    
      description: This endpoint allows you to delete a product through its ID
      summary: Delete product by ID
      parameters:
        - in: path
          name: pid
          description: Is the autogenerated ID for the product
          required: true
          schema:
            type: string      
      responses:
        200:
          description: The product was deleted successfully
          content: 
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessDeleteProduct'
        404:
          description: The product could not be deleted
          content: 
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Error'      
components:
  schemas:
    PaginateProducts:
      type: object
      properties:
        status:
          type: string
          example: success
        payload:
          type: array
          items:
            $ref: '#/components/schemas/Product'      
        totalPages:
          type: number
          example: 5
        prevPage:
          type: number
          example: 1
        nextPage:
          type: number
          example: 3
        page:
          type: number
          example: 2
        hasPrevPage:
          type: boolean
          example: true
        hasNextPage:
          type: boolean
          example: true
        prevLink:
          type: string
          example: example
        nextLink:
          type: string
          example: example
    Error:
      type: object
      properties:
        status:
          type: string
          example: error
        payload:
          type: object
          properties:
            error:
              type: object
              properties:
                message:
                  type: string
                  example: This product/cart not exist
              example: { error: Invalid product/cart, message: This product/cart not exist }
            message:
              type: string
              example: This product/cart not exist
    SuccessGetProduct:
      type: object
      properties:
        status:
          type: string
          example: success
        payload:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    SuccessAddProduct:
      type: object
      properties:
        status:
          type: string
          example: success
        payload:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    SuccessUpdateProduct:
      type: object
      properties:
        status:
          type: string
          example: success
        payload:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    SuccessDeleteProduct:
      type: object
      properties:
        status:
          type: string
          example: success
        payload:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    Query:
      type: object
      properties:
  requestBodies:
    addProduct:
      type: object
      properties:
        title:
          type: string
          description: Is the name of the product
          example: Mouse
        description:
          type: string
          description: Product description
          example: RGB wireless
        price:
          type: number
          description: Product value
          example: 2500
        stock:
          type: number
          description: Quantity of products available
          example: 10
        code:
          type: string
          description: Product identification code for example barcode
          example: AB-158647691
        category:
          type: string
          description: Product family
          example: Accesories
        status:
          type: boolean
          description: Product availability
          example: true
        thumbnails:
          type: array
          description: Product image URL list
          items:
            type: string
            example: https://placehold.co/300x200
    updateProduct:
      type: object
      properties:
        title:
          type: string
          description: Is the name of the product
          example: Mouse
        description:
          type: string
          description: Product description
          example: RGB wireless
        price:
          type: number
          description: Product value
          example: 2500
        stock:
          type: number
          description: Quantity of products available
          example: 10
        code:
          type: string
          description: Product identification code for example barcode
          example: AB-158647691
        category:
          type: string
          description: Product family
          example: Accesories
        status:
          type: boolean
          description: Product availability
          example: true
        thumbnails:
          type: array
          description: Product image URL list
          items:
            type: string
            example: https://placehold.co/300x200