paths:
  /api/carts:
    get:
      tags:
        - Carts
      description: This endpoint allows you to get all carts
      summary: All carts
      parameters:
        - in: query
          name: filter
          description: Allows to inject any query accepted by the data model
          required: false
          schema:
            type: object
            $ref: '#/components/schemas/Filter'
      responses:
        200:
          description: could get the carts successfully
          content: 
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessGetCarts'
        404:
          description: Could not get the carts
          content: 
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Carts    
      description: This endpoint allows you to add a new carts
      summary: Add new cart
      responses:
        200:
          description: The cart was added successfully
          content: 
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessAddCart'
        404:
          description: The cart could not be added
          content: 
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Error'     
  /api/carts/{cid}:
    get:
      tags:
        - Carts
      description: This endpoint allows you to obtain a cart through its ID
      summary: Cart by ID
      parameters:
        - in: path
          name: cid
          description: Is the autogenerated ID for the cart
          required: true
          schema:
            type: string
      responses:
        200:
          description: The cart was obteined successfully
          content: 
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessGetProductsInCart'
        404:
          description: The cart could not be obteined
          content: 
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Error'  
    put:
      tags:
        - Carts    
      description: This endpoint allows you to modify a cart through its ID
      summary: Modify cart by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/requestBodies/updateCart'      
      parameters:
        - in: path
          name: cid
          description: Is the autogenerated ID for the cart
          required: true
          schema:
            type: string      
      responses:
        200:
          description: The cart was successfully modified
          content: 
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessUpdateCart'
        404:
          description: The cart could not be modified
          content: 
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Error'   
    delete:
      tags:
        - Carts    
      description: This endpoint allows you to delete a cart through its ID
      summary: Delete cart by ID
      parameters:
        - in: path
          name: cid
          description: Is the autogenerated ID for the cart
          required: true
          schema:
            type: string      
      responses:
        200:
          description: The cart was successfully deleted
          content: 
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessDeleteCart'
        404:
          description: The cart could not be deleted
          content: 
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Error'
  /api/carts/{cid}/products/{pid}:
      post:
        tags:
          - Products on cart
        description: This endpoint allows you to add a product on cart
        summary: Add product on cart by IDs
        parameters:
          - in: path
            name: cid
            description: Is the autogenerated ID for the cart
            required: true
            schema:
              type: string
          - in: path
            name: pid
            description: Is the autogenerated ID for the product
            required: true
            schema:
              type: string                          
        responses:
          200:
            description: The product was added successfully
            content: 
              application/json:
                schema:
                  type: object
                  $ref: '#/components/schemas/ProductInCart'
          404:
            description: The product could not be added
            content: 
              application/json:
                schema:
                  type: object
                  $ref: '#/components/schemas/Error'   
      put:
        tags:
          - Products on cart    
        description: This endpoint allows you to modify the quantity of a certain product in the cart
        summary: Modify quantity product on cart
        parameters:
          - in: path
            name: cid
            description: Is the autogenerated ID for the cart
            required: true
            schema:
              type: string
          - in: path
            name: pid
            description: Is the autogenerated ID for the product
            required: true
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/requestBodies/updateProductInCart'
        responses:
          200:
            description: The units could be modified correctly
            content: 
              application/json:
                schema:
                  type: object
                  $ref: '#/components/schemas/SuccessDeleteCart'
          404:
            description: Could not modify units correctly
            content: 
              application/json:
                schema:
                  type: object
                  $ref: '#/components/schemas/Error'     
      delete:
        tags:
          - Products on cart    
        description: This endpoint allows you to delete  product in the cart
        summary: Delete product on cart
        parameters:
          - in: path
            name: cid
            description: Is the autogenerated ID for the cart
            required: true
            schema:
              type: string
          - in: path
            name: pid
            description: Is the autogenerated ID for the product
            required: true
            schema:
              type: string                              
        responses:
          200:
            description: The units could be deleted correctly
            content: 
              application/json:
                schema:
                  type: object
                  $ref: '#/components/schemas/SuccessDeleteCart'
          404:
            description: Could not deleted units correctly
            content: 
              application/json:
                schema:
                  type: object
                  $ref: '#/components/schemas/Error'       
  /api/carts/{cid}/purchase:
      post:
        tags:
          - Purchase
        description: This endpoint allows you to buy the products in the cart
        summary: Buy the products
        parameters:
          - in: path
            name: cid
            description: Is the autogenerated ID for the cart
            required: true
            schema:
              type: string              
        responses:
          200:
            description: The units could be purchased correctly
            content: 
              application/json:
                schema:
                  type: object
                  $ref: '#/components/schemas/SuccessPurchase'
          404:
            description: Could not purchased units correctly
            content: 
              application/json:
                schema:
                  type: object
                  $ref: '#/components/schemas/Error'           
components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          description: Is the autogenerated ID for the product
          example: 6432fcbe70f85e19dfe87e67
        title:
          type: string
          description: Is the name of the product
          example: Mouse
        description:
          type: string
          description: Product description
          example: RGB wireless
        price:
          type: number
          description: Product value
          example: 2500
        stock:
          type: number
          description: Quantity of products available
          example: 10
        code:
          type: string
          description: Product identification code for example barcode
          example: AB-158647691
        category:
          type: string
          description: Product family
          example: Accesories
        status:
          type: boolean
          description: Product availability
          example: true
        thumbnails:
          type: array
          description: Product image URL list
          items:
            type: string
            example: https://placehold.co/300x200
        owner:
          type: string
          description: Reference to the user who created the product
          example: admin
    MongoResponse:
      properties:
        acknowledged:
          type: boolean
          example: true
        modifiedCount:
          type: number
          example: 1              
        upsertedId:
          type: string
          example: null              
        upsertedCount:
          type: number
          example: 1              
        matchedCount:
          type: number
          example: 1     
    ProductInCart:
      type: object
      properties:
              pid:
                type: object
                $ref: '#/components/schemas/Product'
              quantity:
                type: number
                example: 1
    Ticket:
      type: object
      properties:
        code:
          type: string
          example: A35G41863HY5484
        purchase_datetime:
          type: number
          example: 5215841
        products:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/ProductInCart'
        amount:
          type: number
          example: 2500
        purchaser:
          type: string
          example: user@gmail.com                
    Cart:
      type: object
      properties:
        _id:
          type: string
          example: 6432fcbe70f85e19dfe87e66
        products:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/ProductInCart'
    Filter:
      type: object
      properties:
    SuccessAddCart:
      type: object
      properties:
        status:
          type: string
          example: success
        payload:
          type: array
          items:
            $ref: '#/components/schemas/Cart'
    SuccessGetProductsInCart:
      type: object
      properties:
        status:
          type: string
          example: success
        payload:
          type: array
          items:
            $ref: '#/components/schemas/ProductInCart'
    SuccessGetCarts:
      type: object
      properties:
        status:
          type: string
          example: success
        payload:
          type: array
          items:
            $ref: '#/components/schemas/Cart'            
    SuccessUpdateCart:
      type: object
      properties:
        status:
          type: string
          example: success
        payload:
          type: array
          items:
            $ref: '#/components/schemas/MongoResponse'    
    SuccessDeleteCart:
      type: object
      properties:
        status:
          type: string
          example: success
        payload:
          type: array
          items:
            $ref: '#/components/schemas/MongoResponse'    
    SuccessAddProductInCart:
      type: object
      properties:
        status:
          type: string
          example: success
        payload:
          type: object
          items:
            $ref: '#/components/schemas/MongoResponse'       
    SuccessPurchase:
      type: object
      properties:
        status:
          type: string
          example: success
        payload:
          type: array
          items:
            $ref: '#/components/schemas/Ticket'    
  requestBodies:
    updateCart:
      type: array
      items:
        type: object
        properties:
          pid:
            type: string
            example: 6432fcbe70f85e19dfe87e67
          quantity:
            type: number
            example: 3
    updateProductInCart:
      type: object
      properties:
        quantity:
          type: number
          example: 5